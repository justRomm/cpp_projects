/* БС-14 Романюк М.Д.
 * Визначення класу QueueP у файлі QueueP.h */

#if !defined(QUEUEP_H_)
#define QUEUEP_H_

#include "Task.h"
#include "Bug.h"
// Структура, використана в реалізації черги з пріоритетом
struct Node
{
	// Пріоритет елемента
	int priority;
	// Елемент
	Assignment* el;
	// Посилання на наступний вузол
	Node* next;
};

class QueueP
{
private:
	// Розмір черги з пріоритетом
	int size;
	// Голова черги з пріоритетом
	Node* head;
public:
	// Конструктор за замовченням
	QueueP();
	// Деструктор
	~QueueP();
	// Геттер розміру черги з пріоритетом
	int getSize() const;
	// Геттер посилання на голову черги з пріоритетом
	Node* getHead() const;
	// Метод додавання елементу за пріоритетом
	void push(Assignment* elem, int priority);
	// Метод видалення одного елемента з голови черги з пріоритетом
	void pop();
	// Метод очищення черги з пріоритетом
	void clear();
	// Метод перевірки черги з пріоритетом на порожність
	bool empty() const;
	// Метод виводу черги з пріоритетом в потік
	void show() const;
	// Метод сортування черги з пріоритетом
	void sort();
	// Перевантаження оператора привласнення
	QueueP* operator=(const QueueP& _queue);
	// Метод  для зчитування елементів з файлу у чергу з пріоритетом
	void readFromFile();
	// Метод  для запису черги з пріоритетом у файл 
	void writeToFile() const;
	// Метод  для отримання кількості елементів типу дефект з черги з пріоритетом, що знаходиться в певному компоненті
	void doReq() const;
};
#endif